name: Deployment Workflow

on:

  workflow_dispatch:


jobs:
  dev-deployment:
    name: Deploy to Dev
    environment: dev
    runs-on: self-hosted
    outputs:
      dev_output: ${{ steps.dev_output.outputs.value }}
    steps:
        - name: Checkout
          uses: actions/checkout@v4
  
        - name: Log in to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        - name: Set up Docker Buildx
          uses: docker/build-push-action@v5
          with:
            push: true
            tags: ${{ secrets.DOCKER_HUB_USERNAME }}/app:latest
        - name: SonarQube Scan
          uses: sonarsource/sonarqube-scan-action@master
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        - name: Print Environment 
          id: dev_output
          run: echo "${{ vars.CURRENT_ENV }}"

  int-deployment:
    name: Deploy to Integration
    environment: int
    needs: dev-deployment # This job depends on the successful completion of the dev-deployment job
    runs-on: self-hosted
    outputs:
      int_output: ${{ steps.int_output.outputs.value }}
    steps:
        - name: Checkout
          uses: actions/checkout@v4
  
        - name: Log in to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        - name: Set up Docker Buildx
          uses: docker/build-push-action@v5
          with:
            push: true
            tags: ${{ secrets.DOCKER_HUB_USERNAME }}/app:latest
        - name: SonarQube Scan
          uses: sonarsource/sonarqube-scan-action@master
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

        - name: Print Environment 
          id: int_output
          run: echo "${{ vars.CURRENT_ENV }}"


  prod-deployment:
    name: Deploy to Prod
    needs: int-deployment # This job depends on the successful completion of the int-deployment job
    runs-on: self-hosted
    environment: prod
    outputs:
      prod_output: ${{ steps.prod_output.outputs.value }}
    # This job runs only if the push is to the main branch
    if: github.ref == 'refs/heads/main'
    steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Log in to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        - name: Set up Docker Buildx
          uses: docker/build-push-action@v5
          with:
            push: true
            tags: ${{ secrets.DOCKER_HUB_USERNAME }}/app:latest
        - name: SonarQube Scan
          uses: sonarsource/sonarqube-scan-action@master
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        - name: Print Environment 
          id: prod_output
          run: echo "${{ vars.CURRENT_ENV }}"

