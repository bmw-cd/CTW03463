
name: CI workflow
on:
    workflow_call:
        inputs:
            environment_name:
              description: 'The target environment for the workflow'
              required: true
              type: string
        secrets:
            docker_hub_username:
              description: 'Docker Hub username'
              required: true
            docker_hub_access_token:
              description: 'Docker Hub access token'
              required: true
            sonar_token:
              description: 'SonarQube token'
              required: true
            sonar_host_url:
              description: 'SonarQube host URL'
              required: true
jobs:
    ci_workflow:
    
      runs-on: self-hosted
      outputs:
          image_output: ${{ steps.image_output.outputs.value }}
      steps:
          - name: Checkout
            uses: actions/checkout@v4
    
          - name: Test application
            run: npm test
  
          #- name: SonarQube Scan
          #  uses: sonarsource/sonarqube-scan-action@master
          #  env:
          # SONAR_TOKEN: ${{ secrets.sonar_token }}
          #  SONAR_HOST_URL: ${{ secrets.sonar_host_url }}
              
          - name: Log in to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.docker_hub_username }}
              password: ${{ secrets.docker_hub_access_token }}
              
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3
            
          - name: Build and export
            uses: docker/build-push-action@v5
            with:
              context: .
              tags: ${{ secrets.docker_hub_username }}/nodeapp-v1
              outputs: type=docker,dest=/tmp/nodeapp-v1.tar
          - name: Upload artifact
            uses: actions/upload-artifact@v3
            with:
                name: nodeappImage
                path: /tmp/nodeapp-v1.tar
          - name: Download artifact
            uses: actions/download-artifact@v3
            with:
              name: nodeappImage
              path: /tmp
          - name: Output the image name
            id: image_output
            run: echo "The image name is ${{ secrets.docker_hub_username }}/nodeapp-v1"